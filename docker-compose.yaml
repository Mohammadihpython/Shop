version:  '3'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - main
  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=hamed
      - POSTGRES_DB=shop
    networks:
      - main
    ports:
      - '5432:5432'
    restart: on-failure
    volumes:
      - ./postgres_data:/var/lib/postgresql/data



  celery_worker:
    build: .
    container_name: celery_worker
    command: "celery -A config worker --loglevel=INFO"
    depends_on:
      - app
      - redis
      - postgres
    environment:
      - C_FORCE_ROOT="true"
    networks:
      - main
    restart: on-failure


  celery_beat:
    build: .
    container_name: celery_beat
    command: "celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - app
      - postgres
      - redis
      - celery_worker
    environment:
      - C_FORCE_ROOT="true"
    restart: on-failure

  # django container
  app:
    build: .
    volumes:
      - .:/django
      - static_file:/app/static
      - media_file:/app/media
    restart: always
    ports:
      - "8000:8000"
    networks:
      - main
      - nginx_network
    image: app:django
    container_name : django_container
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver  0.0.0.0:8000"
    depends_on:
      - postgres
      - redis

networks:
  main:
    external: true

  nginx_network:
    external: true


volumes:
  postgres_data:
    external: true

  static_file:
    external: true

  media_file:
    external: true


